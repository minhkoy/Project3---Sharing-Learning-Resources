@page
@model OfficialProject3.Pages.Files.IndexModel

@{
    ViewData["Title"] = $"Danh sách các tài liệu";
    Layout = "~/Pages/Shared/_Layout.cshtml";
    var userId = UserManager.GetUserId(User);
    var isAdmin = User.IsInRole("Admin");
}

@if(Model.InputType.Equals(String.Empty))
{
    <h1>Danh sách toàn bộ các tài liệu</h1>
}
else
{
    <h1>@ViewData["Title"] có thể loại @Html.DisplayFor(model => model.Items[0].Type)</h1>
}

<p>
    <a asp-page="Create">Tạo mới</a>
</p>

<div class="input-group w-50 center_div">
    <form asp-page="./Index" method="get">
        <div class="form-actions no-color">
            <p>
                Tìm kiếm theo tên:
                <input type="text" name="SearchString" value="@Model.CurrentFilter" />
                <input type="submit" value="Tìm kiếm" class="btn btn-primary" />
            </p>
        </div>
    </form>
</div>

@if (Model.Items.Count == 0)
{
    <h3 class="d-flex justify-content-center text-danger">
        Không có tài liệu phù hợp với kết quả tìm kiếm.
    </h3>
    return;
}

<table class="table text-white">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Name)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Item[0].Description)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].SubjectCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].User)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Items) 
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubjectCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.UserName)
            </td>
            <td>
                <a class="btn btn-primary" asp-page="./Details" asp-route-id="@item.Id">Xem tài liệu</a>
                @if (userId == item.UserId)
                {
                    <a class="btn btn-warning" asp-page="./Edit" asp-route-id="@item.Id">Sửa thông tin tài liệu</a>
                }
                @if (User.IsInRole("Admin") || userId == item.UserId)
                {
                    <a class="btn btn-danger" asp-page="./Delete" asp-route-id="@item.Id">Xóa tài liệu này</a>
                }
            </td>
        </tr>
    }
    </tbody>
</table>

@{
    var prevDisbled = !Model.Items.HasPreviousPage ? "disabled bg-secondary" : String.Empty;
    var nextDisabled = !Model.Items.HasNextPage ? "disabled bg-secondary" : String.Empty;
}

<div class="d-flex justify-content-center">
    <a asp-page="./Index"
       asp-route-pageIndex="@(Model.Items.PageIndex - 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       asp-route-type="@Model.InputType"
       class="btn btn-outline-primary @prevDisbled">
        Trang trước
    </a>

    <span class="text-reset m-1">Trang @Model.Items.PageIndex / @Model.Items.TotalPages</span>

    <a asp-page="./Index"
       asp-route-pageIndex="@(Model.Items.PageIndex + 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       asp-route-type="@Model.InputType"
       class="btn btn-outline-primary @nextDisabled">
        Trang sau
    </a>
</div>

@if (!Model.InputType.Equals(String.Empty))
{
    <a asp-page="/Files/Index" asp-route-type="">Xem toàn bộ danh sách tài liệu...</a>
}

@*<button type="button" class="btn btn-outline-success" onclick="commentCount()">Check the number of comments</button>
<script>
    function commentCount() {
        fetch("/comments/22c9cecc-a234-4fae-9aa6-fe4e3fcc10b1")
        .then((response) => (response.json()))
        .then((data) => alert(JSON.stringify(data)))
        .catch((error) => alert(error))
    }
</script>*@
